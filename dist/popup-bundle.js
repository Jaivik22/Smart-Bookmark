import{d as m,a as u,g as C,s as I,b as A,c as P,e as R,f as H}from"./firebase-bundle.js";document.addEventListener("DOMContentLoaded",async()=>{const k=document.getElementById("bookmarkTitle"),i=document.getElementById("sectionSelect"),g=document.getElementById("newSection"),x=document.getElementById("saveBookmark"),D=document.getElementById("bookmarkList"),p=document.getElementById("syncBtn"),b=document.getElementById("backArrow"),v=document.getElementById("bookmarkContainer"),F=document.getElementById("syncContainer"),f=document.getElementById("codeDisplay"),$=document.getElementById("loader"),E=document.getElementById("toast");let y="";const h=window.browser||window.chrome;function s(e,o="success"){E.textContent=e,E.className=`toast ${o} show`,setTimeout(()=>{E.className="toast"},3e3)}function r(e){$.style.display=e?"block":"none",v.classList.toggle("loading",e)}let a="";try{r(!0);const e=await new Promise(o=>{h.storage.sync.get("syncCode",o)});if(e.syncCode)a=e.syncCode,f.textContent=`Synced to: ${a}`;else{f.textContent="Generating sync code...";let o=!1;for(;!o;){const t=Math.floor(1e5+Math.random()*9e5).toString(),n=m(u,"users",t);(await C(n)).exists()||(a=t,await new Promise(l=>{h.storage.sync.set({syncCode:a},l)}),await T(a),o=!0,f.textContent=`Synced to: ${a}`,s("Sync code generated successfully!"))}}}catch(e){console.error("Error handling sync code:",e),s("Failed to initialize sync code","error")}finally{r(!1)}h.tabs.query({active:!0,currentWindow:!0},e=>{if(e&&e[0]){y=e[0].url||"";const o=e[0].title||y||"Untitled";k.value=o,console.log("Fetched tab data:",{url:y,title:o})}else console.error("Failed to fetch active tab data:",e),k.value="Untitled",y="",s("Failed to fetch tab data","error")});async function T(e){try{const o=m(u,"users",e);await I(o,{createdAt:new Date().toISOString(),lastActive:new Date().toISOString()},{merge:!0}),console.log("User document created in Firebase:",e)}catch(o){throw console.error("Error creating user in Firebase:",o),s("Failed to create user in Firebase","error"),o}}async function B(){try{r(!0),f.textContent=`Synced to: ${a}`;const e=await P(R(u,"users",a,"topics")),o=[];e.forEach(t=>o.push(t.id)),i.innerHTML='<option value="">Select Section</option><option value="new">New Section...</option>',o.forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,i.appendChild(n)}),D.innerHTML="";for(const t of o){const n=await C(m(u,"users",a,"topics",t)),c=n.exists()?n.data().urls||[]:[],l=document.createElement("div");l.innerHTML=`<strong>${t}</strong>`,c.forEach((d,L)=>{if(!d||!d.url){console.warn("Invalid bookmark data:",d);return}const w=d.title||"Untitled Bookmark";console.log("Rendering bookmark:",{section:t,index:L,title:w,url:d.url});const S=document.createElement("div");S.className="bookmark-item",S.innerHTML=`
            <a href="${d.url}" target="_blank" title="${w}">${w}</a>
            <button class="delete-btn" data-section="${t}" data-index="${L}" aria-label="Delete ${w}">Delete</button>`,l.appendChild(S)}),D.appendChild(l)}document.querySelectorAll(".delete-btn").forEach(t=>{t.addEventListener("click",n=>{const c=n.target.dataset.section,l=parseInt(n.target.dataset.index);U(c,l)})}),s("Bookmarks loaded successfully!")}catch(e){console.error("Error loading data from Firebase:",e),s("Failed to load bookmarks","error")}finally{r(!1)}}async function U(e,o){try{r(!0);const t=m(u,"users",a,"topics",e),n=await C(t);if(n.exists()){const c=n.data().urls||[];c.splice(o,1),c.length===0?(await H(t),s(`Section "${e}" deleted successfully!`)):(await I(t,{urls:c},{merge:!0}),s("Bookmark deleted successfully!")),await B()}}catch(t){console.error("Error deleting bookmark:",t),s("Failed to delete bookmark","error")}finally{r(!1)}}i.addEventListener("change",()=>{g.style.display=i.value==="new"?"block":"none"});async function M(e,o,t){try{r(!0);const n=m(u,"users",a,"topics",t);await I(n,{urls:A({title:e,url:o,date:new Date().toISOString()})},{merge:!0}),console.log("Bookmark saved successfully!"),k.value="",i.value="",g.value="",g.style.display="none",s("Bookmark saved successfully!"),await B()}catch(n){console.error("Error saving bookmark:",n),s("Failed to save bookmark","error")}finally{r(!1)}}x.addEventListener("click",async()=>{const e=y,o=k.value.trim()||e||"Untitled";let t=i.value;if(!e||!t){s("Please select a section","error");return}if(t==="new"&&(t=g.value.trim(),!t)){s("Please enter a section name","error");return}console.log("Created section: "+t),await M(o,e,t)}),p.addEventListener("click",()=>{v.style.display="none",F.style.display="block",p.style.display="none",b.style.display="inline"}),b.addEventListener("click",()=>{F.style.display="none",v.style.display="block",p.style.display="flex",b.style.display="none"}),await B()});
