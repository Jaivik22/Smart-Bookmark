import{d as y,a as d,s as f,b as F,g as M,c as T,e as S,f as A}from"./firebase-bundle.js";document.addEventListener("DOMContentLoaded",async()=>{const u=document.getElementById("bookmarkTitle"),a=document.getElementById("sectionSelect"),m=document.getElementById("newSection"),C=document.getElementById("saveBookmark"),E=document.getElementById("bookmarkList"),g=document.getElementById("syncBtn"),k=document.getElementById("backArrow"),b=document.getElementById("bookmarkContainer"),h=document.getElementById("syncContainer"),B=document.getElementById("codeDisplay");let l="";const p=window.browser||window.chrome;let s="";try{const t=await new Promise(o=>{p.storage.sync.get("syncCode",o)});t.syncCode?(s=t.syncCode,console.log("Usercode already exists:",s)):(B.textContent="No sync code set. Please wait...",s=Math.floor(1e5+Math.random()*9e5).toString(),await new Promise(o=>{p.storage.sync.set({syncCode:s},o)}),console.log("Generated and saved new usercode:",s),await L(s))}catch(t){console.error("Error handling sync code:",t)}p.tabs.query({active:!0,currentWindow:!0},t=>{if(t&&t[0]){l=t[0].url||"";const o=t[0].title||l||"Untitled";u.value=o,console.log("Fetched tab data:",{url:l,title:o})}else console.error("Failed to fetch active tab data:",t),u.value="Untitled",l=""});async function L(t){try{const o=y(d,"users",t);await f(o,{createdAt:new Date().toISOString(),lastActive:new Date().toISOString()},{merge:!0}),console.log("User document created in Firebase:",t)}catch(o){console.error("Error creating user in Firebase:",o)}}async function w(){try{B.textContent=`Your Bookmarks are synced to: ${s}`;const t=await M(T(d,"users",s,"topics")),o=[];t.forEach(e=>o.push(e.id)),a.innerHTML='<option value="">Select Section</option><option value="new">New Section...</option>',o.forEach(e=>{const n=document.createElement("option");n.value=e,n.textContent=e,a.appendChild(n)}),E.innerHTML="";for(const e of o){const n=await S(y(d,"users",s,"topics",e)),r=n.exists()?n.data().urls||[]:[],i=document.createElement("div");i.innerHTML=`<strong>${e}</strong>`,r.forEach((c,I)=>{if(!c||!c.url){console.warn("Invalid bookmark data:",c);return}const D=c.title||"Untitled Bookmark";console.log("Rendering bookmark:",{section:e,index:I,title:D,url:c.url});const v=document.createElement("div");v.className="bookmark-item",v.innerHTML=`
            <a href="${c.url}" target="_blank">${D}</a>
            <button class="delete-btn" data-section="${e}" data-index="${I}">Delete</button>`,i.appendChild(v)}),E.appendChild(i)}document.querySelectorAll(".delete-btn").forEach(e=>{e.addEventListener("click",n=>{const r=n.target.dataset.section,i=parseInt(n.target.dataset.index);x(r,i)})})}catch(t){console.error("Error loading data from Firebase:",t)}}async function x(t,o){try{const e=y(d,"users",s,"topics",t),n=await S(e);if(n.exists()){const r=n.data().urls||[];r.splice(o,1),r.length===0?await A(e):await f(e,{urls:r},{merge:!0}),w()}}catch(e){console.error("Error deleting bookmark:",e)}}a.addEventListener("change",()=>{m.style.display=a.value==="new"?"block":"none"});async function U(t,o,e){try{const n=y(d,"users",s,"topics",e);await f(n,{urls:F({title:t,url:o,date:new Date().toISOString()})},{merge:!0}),console.log("Bookmark saved successfully!"),u.value="",a.value="",m.value="",m.style.display="none",w()}catch(n){console.error("Error saving bookmark:",n)}}C.addEventListener("click",()=>{const t=l,o=u.value.trim()||t||"Untitled";let e=a.value;if(!t||!e){console.log("Please select a section");return}if(e==="new"&&(e=m.value.trim(),!e)){console.log("Please enter a section name");return}console.log("created section: "+e),U(o,t,e)}),g.addEventListener("click",()=>{b.style.display="none",h.style.display="block",g.style.display="none",k.style.display="inline"}),k.addEventListener("click",()=>{h.style.display="none",b.style.display="block",g.style.display="flex",k.style.display="none"}),w()});
